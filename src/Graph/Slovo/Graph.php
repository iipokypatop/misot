<?php
namespace Aot\Graph\Slovo;

class Graph extends \BaseGraph\Graph
{
    /** @var  \Aot\Graph\Slovo\PositionMap */
    protected $position_map;

    /**
     * @return \Aot\Graph\Slovo\Graph
     */
    public static function create()
    {
        $ob = new static();
        $ob->position_map = PositionMap::create();
        return $ob;
    }

    /**
     * @param \Aot\Graph\Slovo\Vertex $vertex
     * @return int
     */
    public function getVertexPositionInSentence(\Aot\Graph\Slovo\Vertex $vertex)
    {
        return $this->position_map->getPositionInSentence($vertex);
    }

    /**
     * @return \Aot\Graph\Slovo\Edge[]
     */
    public function getEdgesCollection()
    {
        return parent::getEdges(); // TODO: Change the autogenerated stub
    }

    /**
     * @return \Aot\Graph\Slovo\Vertex[]
     */
    public function getVerticesCollection()
    {
        return parent::getVerticesCollection(); // TODO: Change the autogenerated stub
    }

    /**
     * @param \Aot\Graph\Slovo\Vertex $vertex
     * @param int $sentence_id
     * @param int $position_in_sentence
     */
    public function appendVertexInMapPositionsOfVerticesInSentence(
        \Aot\Graph\Slovo\Vertex $vertex,
        $sentence_id,
        $position_in_sentence
    )
    {
        if (!is_int($position_in_sentence) || $position_in_sentence < 0) {
            throw new \Aot\Exception("Wrong position value! " . var_export($position_in_sentence, true));
        }
        $this->position_map->add($vertex, $sentence_id, $position_in_sentence);
    }

    /**
     * @param \Aot\Graph\Slovo\Vertex $vertex
     * @return bool
     */
    public function isVertexHasPosition(\Aot\Graph\Slovo\Vertex $vertex)
    {
        return $this->position_map->hasPosition($vertex);
    }


    /**
     * @param Vertex $vertex_for_delete
     * @return bool
     */
    public function deleteVertexFromPositionMap(\Aot\Graph\Slovo\Vertex $vertex_for_delete)
    {
        $this->position_map->delete($vertex_for_delete);
    }

    /**
     * @return PositionMap
     */
    public function getPositionMap()
    {
        return $this->position_map;
    }
}