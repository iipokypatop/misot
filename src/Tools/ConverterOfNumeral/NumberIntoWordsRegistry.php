<?php
/**
 * Created by PhpStorm.
 * User: Ivan
 * Date: 11.05.2016
 * Time: 16:47
 */

namespace Aot\Tools\ConverterOfNumeral;


class NumberIntoWordsRegistry
{

    static protected $large_number = [
        [],
        ['тысяча', 'тысячи', 'тысяч'],
        ['миллион', 'миллиона', 'миллионов'],
        ['миллиард', 'миллиарда', 'миллиардов'],
        ['триллион', 'триллиона', 'триллионов'],
        ['квадриллион', 'квадриллиона', 'квадриллионов'],
    ];

    static protected $little_number = [
        -2 => 'две',
        -1 => 'одна',
        1 => 'один',
        2 => 'два',
        3 => 'три',
        4 => 'четыре',
        5 => 'пять',
        6 => 'шесть',
        7 => 'семь',
        8 => 'восемь',
        9 => 'девять',
        10 => 'десять',
        11 => 'одиннадцать',
        12 => 'двенадцать',
        13 => 'тринадцать',
        14 => 'четырнадцать',
        15 => 'пятнадцать',
        16 => 'шестнадцать',
        17 => 'семнадцать',
        18 => 'восемнадцать',
        19 => 'девятнадцать',
        20 => 'двадцать',
        30 => 'тридцать',
        40 => 'сорок',
        50 => 'пятьдесят',
        60 => 'шестьдесят',
        70 => 'семьдесят',
        80 => 'восемьдесят',
        90 => 'девяносто',
        100 => 'сто',
        200 => 'двести',
        300 => 'триста',
        400 => 'четыреста',
        500 => 'пятьсот',
        600 => 'шестьсот',
        700 => 'семьсот',
        800 => 'восемьсот',
        900 => 'девятьсот',
    ];

    static protected $map = [2, 0, 1, 1, 1, 2];

    /**
     * @return string[]
     */
    public static function getLargeNumber()
    {
        return static::$large_number;
    }

    /**
     * @return string[]
     */
    public static function getLittleNumber()
    {
        return static::$little_number;
    }

    /**
     * @return int[]
     */
    public static function getMap()
    {
        return static::$map;
    }
}